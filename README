'1. ðŸ§  BIOS (16-bit Real Mode)
   â””â”€> Cherche le premier secteur du disque (MBR = bootloader)
   â””â”€> Charge le bootloader Ã  l''adresse 0x7C00
       â†“
2. ðŸ¥¾ Bootloader (toujours 16-bit Real Mode)
   â””â”€> Configure le matÃ©riel de base si besoin
   â””â”€> Charge ton kernel en mÃ©moire (ex: Ã  0x100000 ou 0x200000)
   â””â”€> Initialise la GDT (Global Descriptor Table)
   â””â”€> Active le bit PE (Protection Enable) dans CR0
   â””â”€> FAIT UN JMP FAR vers un segment 32-bit dÃ©fini dans la GDT
       â†“
3. ðŸ§ª Mode protÃ©gÃ© (32-bit Protected Mode)
   â””â”€> Segmentation activÃ©e (GDT utilisÃ©e)
   â””â”€> Kernel commence Ã  exÃ©cuter du vrai code 32 bits (ex: `_start`)
   â””â”€> Tu peux afficher du texte en VGA, gÃ©rer des interruptions, etc.
       â†“
4. ðŸ‘‘ Ton kernel
   â””â”€> Initialise lâ€™IDT (interruptions)
   â””â”€> Configure la piles
   â””â”€> Lance le kernel C (ex: appel Ã  `kmain()`)'